* 1단계 : 웹 프로그래밍 : 정적인 결과 + 동적인 결과
	사용자 <----->	서버 - 	정적인 결과($.load())
							동적인 결과    -----     Database
										-----	  다른 서버
										
* 서버의 역할을 분리 : WS+정적, WAS+동적
	WS : 사용자의 신호를 듣고 있는다
	WAS : WS가 신호를 보내면 자바를 실행해서 결과를 WS에서 보고
		프로그래머가 자바 클래스를 자기 마음대로 만들면 돌려주기가 어렵다 	
		WAS가 돌려줄 수 있는 자바클래스 표준를 만들었다 -> Servlet

* 동적인 웹의 경우 디자인은 일정하고 내용은 매번 달라
	디자인은 html, 내용은 자바가 실행된 결과 -> 이 둘을 하나의 파일에 작성할 수 없을까?
	그 목적으로 만들어진 것이 jsp -> 서버에서 서블릿으로 번역한 다음 실행해 html로 제공
	<html>
		<% out.println("<p>안녕하세요</p>");
	</html>
	=====>
	protected void doGet() {
		PrintWriter out = response.getWriter();
		out.println("<html>");
		out.println("<p>안녕하세요</p>");
		out.println("</html>");
	}
	
	프론트 프로그래머가 자바를 배워서 html과 쉽게 섞어서 작성하자!!! -> 망했음

* 서블릿과 jsp를 함께 사용하자 - jsp를 html대신 서블릿의 기본 뷰로 사용하자

* request와 session
- request : 하나의 작업. 작업이 끝나면 response가 만들어지고 request는 파괴
- session : 한명의 사용자
		    세션이 없는 사용자가 접근하면 만들어지고, 아무런 동작없이 30분이 지날때까지 지속
		    ex) 로그인 - 로그아웃
	
	
	
	
	
	
	