* JDBC(Java DataBase Connectivity) 데이터베이스 프로그래밍
- JDBC는 자바와 데이터베이스를 연결하는 표준
	표준 : 추상 메소드와 순서
	구현 : 자바와 연동하기를 원하는 데이터베이스 벤더. 벤더가 구현한 JDBC 표준을 드라이버라고 한다
	처음에는 마이크로소프트가 ODBC(Open Database 커넥티비티) 드라이버가 호환가능했다...
- 주요 객체
	자바와 데이터베이스를 연결하는 객체 : Connection 객체
	SQL문을 저장하고 있는 객체 : PreparedStatement 객체
		이전에 Statement 객체가 있었다 -> SQL 삽입 공격에 털려나간다
	SQL문을 실행한 경과 : ResultSet 객체
	
* Pool : 미리 만들어놓고 사용하는 것
- 우리 학원은 충분한 강사풀이 있습니다 -> 예비 강사가 많이 있다
- Connection은 사용자와 데이터베이스를 연결한다
	데이터베이스는 연결 10개에 얼마...이런 식으로 요금이 책정된다
	또 연결을 만들고 연결을 해제하는 것이 비용이 비싸다
- 그래서 연결을 미리 만들어 놓고 사용자들이 빌려서 사용한 다음에 반납하자 -> Connection Pool
	그런데 Connection 객체는 close하면 연결을 종료하게 만들어져 있다
		어떤 객체에 내가 원하는 기능를 조합한 프랑켄슈타인 객체 -> proxy
		Connection에 대한 프록시 객체는 DataSource 객체(javax.sql.DataSource)
- 연결 풀을 DataSource 기반으로 동작

* Connection Pool의 종류
- 보통 널리 사용하는 것은 apache DBCP(DataBase Connection Pool) - https://d2.naver.com/helloworld/5102792
- 스프링 부트는 Hikari CP를 사용한다

* 자바, 서블릿, 스프링 MVC에서 어떤 라이브러리를 추가하면 추가하고 끝(동작은 안한다)
  스프링 부트는 자동 설정을 지원한다
  	예를 들어 스프링 시큐리티를 추가하면 보안기능이 바로 동작한다
  	마찬가지로 MyBatis를 추가했다 -> DB 연결이 필요하겠네. 연결하자 -> 어 근데 설정이 없네 -> 에러
  	

* 스프링 프로젝트의 구성
	스프링 프로젝트는 @Controller, @Service, @Repository의 3계층으로 구성된다
													예
		@Controller : 사용자 입출력					가입기간(가입 후 1105일째)
		@Repository : 데이터베이스 입출력			DB에는 가입기간이 아닌 가입일이 저장되어 있다
		@Service : 업무로직 처리					가입일을 가지고 가입기간을 계산
	스프링 프로젝트는 서블릿이라는 차체를 이용해 만든 캠핑카에 해당
		스프링의 기반이 되는 서블릿  : DispatcherServlet
		zboard1을 만들 때는 사용자 요청을 접수하는 서블릿을 컨트롤러라고 불렀었다
		실제 스프링에서는 모든 사용자 요청은 DispatcherServlet이 접수합니다
			@WebServlet("/*")와 같이 적으면 모든 경로 -> 사용자의 모든 요청을 접수할 수 있다
			모든 요청을 접수하는 클래스를 FrontController 패턴라고 한다
				즉 은행 대표전화번호 또는 호텔 데스크에 해당한다
		
create table board (
	-- 글번호, 제목, 내용, 닉네임, 비밀번호, 작성시간, 조회수
	bno number(7),
	title varchar2(100 char),
	-- 오라클 문자열의 최대 길이는 4000바이트. 그이상의 길이라면 clob로 지정
	content clob,
	nickname varchar2(10 char),
	-- BCrypt hash 함수 : 입력 길이에 상관없이 결과 길이가 일정하다
	password varchar2(60 char),
	write_time date,
	read_cnt number(7),
	-- 기본키에 대한 제약조건 : 개체무결성 제약조건(not null, unique)
	-- 기본키에 대한 제약조건은 인덱스의 이름이기도 하다
	constraint board_pk_bno primary key(bno)
);









